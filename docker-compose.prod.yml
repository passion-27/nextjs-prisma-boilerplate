version: '3.8'
services:
  nextjs-prisma-prod:
    container_name: nextjs-prisma-prod
    # image: nextjs-prisma-prod:latest
    build:
      context: .
      dockerfile: Dockerfile.prod
      # db needed for static site generation - getStaticProps
      args:
        - ARG_DATABASE_URL=$DATABASE_URL

    # ports:
    #   - '3001:3001'
    #command: sleep infinity
    volumes:
      - ./uploads:/app/uploads
      - ./prisma:/app/prisma
    # runtime only
    env_file:
      - .env.production
      # for now
      - .env.local
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nextjs-prisma-secure.rule=Host(`${HOSTNAME}`)'
      - 'traefik.http.routers.nextjs-prisma-secure.entrypoints=websecure'
      - 'traefik.http.routers.nextjs-prisma-secure.service=nextjs-prisma-svc'
      - 'traefik.http.services.nextjs-prisma-svc.loadbalancer.server.port=3001'
    depends_on:
      - postgres-db-prod
    networks:
      - proxy
      - internal

  postgres-db-prod:
    image: postgres:14-alpine
    container_name: postgres-db-prod
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - ./prisma/pg-data:/var/lib/postgresql/data
    # internal only for now
    # - ./prisma/pg-config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    # - ./prisma/pg-config/postgresql.conf:/var/lib/postgresql/data/postgresql.conf

    # instead of env_file
    # environment:
    #   POSTGRES_USER=$POSTGRES_USER
    #   POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    #   POSTGRES_DB=$POSTGRES_DB
    env_file:
      - .env.local
    networks:
      - proxy
      - internal

networks:
  proxy:
    external: true
  internal:
    external: false
