version: '3.8'
services:
  nextjs-prisma-prod:
    container_name: nextjs-prisma-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
      # db needed for static site generation - getStaticProps
      args:
        - ARG_DATABASE_URL=$DATABASE_URL
    # ports:
    #   - '3001:3001'
    #command: sleep infinity
    # forward secrets from host at runtime
    # environment:
    # - CONTAINER_VAR=$HOST_VAR
    # volumes: uploads, prisma
    volumes:
      - ./uploads:/app/uploads
      - ./prisma:/app/prisma
    # runtime only
    env_file:
      - .env.production
      # for now
      - .env.local
    # ------------------ traefik deployment
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nextjs-prisma-secure.rule=Host(`${HOSTNAME}`)'
      - 'traefik.http.routers.nextjs-prisma-secure.entrypoints=websecure'
      - 'traefik.http.routers.nextjs-prisma-secure.service=nextjs-prisma'
      - 'traefik.http.services.nextjs-prisma.loadbalancer.server.port=3001'
    depends_on:
      - postgres-db-prod
    networks:
      - proxy
      - internal

  postgres-db-prod:
    image: postgres:14-alpine
    container_name: postgres-db-prod
    restart: unless-stopped
    # expose directly
    ports:
      - '5432:5432'
    volumes:
      - ./prisma/pg-data:/var/lib/postgresql/data
    # instead of env_file
    # environment:
    #   POSTGRES_USER: user
    #   POSTGRES_PASSWORD: pass
    #   POSTGRES_DB: db
    env_file:
      - .env.local
    networks:
      - proxy
      - internal
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.postgres-secure.rule=Host(`postgres-${HOSTNAME}`)'
      - 'traefik.http.routers.postgres-secure.entrypoints=websecure'
      - 'traefik.http.routers.postgres-secure.service=postgres'
      - 'traefik.http.services.postgres.loadbalancer.server.port=5432'

networks:
  proxy:
    external: true
  internal:
    external: false
